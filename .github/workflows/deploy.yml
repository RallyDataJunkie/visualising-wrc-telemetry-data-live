name: deploy-book

on:
  release:
    types: [published]
  workflow_dispatch:

# This job installs dependencies, builds the book, and pushes it to `gh-pages`
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
  
    #   - name: Build the JupyterLite site
    #     run: |
    #       python -m pip install -r requirements_jupyterlite.txt
    #       mkdir -p ./content
    #       cp README.md content
    #       cp ./src/*.ipynb ./content/
    #       cp -r src/images/ content/
    #       cp -r src/wrc_rallydj/ content/
    #       jupyter lite build --contents content --output-dir dist
    #       touch ./dist/.nojekyll
  
      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Install R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          r-version: '4.4.2'
          packages:
            any::shinylive
            #any::knitr
            #any::rmarkdown
            #any::shiny
            #any::ggplot2
            #any::bslib
            #any::dplyr
            #any::jsonlite
            #any::tidyr
            #any::purrr
            #any::leaflet
            #any::ggrepel
            #any::ggpubr
            #any::trajr
            #any::rLFT
            #any::xml2
      - name: Quarto setup
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Add Quarto extensions
        run: |
          quarto add r-wasm/quarto-live

      - name: Setup dist dir
        run: |
          mkdir -p ./dist
          touch ./dist/.nojekyll

      - name: Render Quarto site
        run: |
          quarto render ./src --output-dir ../dist

      - name: Build shinylive site
        run: |
          R -e "shinylive::export('./src/shinyapp', './dist/shinyapp', template_params=c(title='wrcGeo'))"
      #    python -m pip install -r requirements_shiny.txt
      #    mkdir -p ./dist
      #    shinylive export src/shinyapp ./dist --full-shinylive

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        